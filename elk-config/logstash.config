input {
    file {
        path => "/logs/api-gateway/laravel.log"
        type => "docker"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
    file {
        path => "/logs/inventory/laravel.log"
        type => "docker"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
    file {
        path => "/logs/order/laravel.log"
        type => "docker"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
    file {
        path => "/logs/user/laravel.log"
        type => "docker"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
}

filter {
    if [type] == "docker" {
        grok {
            match => [
                "message",
                "\[%{NOTSPACE} %{NOTSPACE}\] local.INFO: Microservice %{NOTSPACE}: %{NOTSPACE} %{NOTSPACE} %{NUMBER:status_code:float} finished in: %{NUMBER:load_time:float} ms"
            ]
        }
        grok {
            match => [
                "message",
                "\[%{NOTSPACE}\] Command %{WORD:application.command.status}: %{GREEDYDATA:application.command.name}"
            ]
        }
        grok {
            match => [
                "container_name",
                "%{WORD:docker.container.name}"
            ]
        }
    }
}

output {
    elasticsearch {
        hosts => "elasticsearch"
        ssl => "false"
    }

    stdout {
        codec => rubydebug
    }
}
