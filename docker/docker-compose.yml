version: '3'

services:
  proxy:
    container_name: proxy
    image: traefik:1.7
    command: --web --docker --docker.domain=localhost --docker.exposedbydefault=false --logLevel=DEBUG
    networks:
      - webgateway
      - web
    ports:
      - "80:80"
      - "8080:8080"

  order:
    image: relephant-order:${VERSION}
    build:
      context: ../order/
      dockerfile: deploy/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:order.localhost"
      - "traefik.backend=order"
    networks:
      - webgateway
    restart: always

  user:
    image: relephant-user:${VERSION}
    build:
      context: ../user/
      dockerfile: deploy/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:user.localhost"
      - "traefik.backend=user"
    networks:
      - webgateway
    restart: always

  inventory:
    image: relephant-inventory:${VERSION}
    build:
      context: ../inventory/
      dockerfile: deploy/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:inventory.localhost"
      - "traefik.backend=inventory"
    networks:
      - webgateway
    restart: always

  api:
    image: relephant-api:${VERSION}
    build:
      context: ../api-gateway/
      dockerfile: deploy/Dockerfile
    environment:
      APP_ENV: ${ENVIRONMENT}
      CONTAINER_ROLE: app
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:api.localhost"
      - "traefik.backend=api"
    networks:
      - webgateway
    restart: always

  api-schedule:
    image: relephant-api-schedule:${VERSION}
    build:
      context: ../api-gateway/
      dockerfile: deploy/Dockerfile
    environment:
      APP_ENV: ${ENVIRONMENT}
      CONTAINER_ROLE: scheduler
    networks:
      - webgateway
    restart: always

networks:
  webgateway:
    driver: bridge
  web:
    external:
      name: traefik_webgateway
