version: "3.7"

services:
  proxy:
    image: traefik:v2.0
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.network=webgateway"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
    networks:
      - webgateway
      - web
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "80:80"
      - "8080:8080"

  order:
    image: 555658144160.dkr.ecr.eu-central-1.amazonaws.com/relephant-order:${VERSION}
    build:
      context: ../order/
      dockerfile: deploy/Dockerfile
    deploy:
      placement:
        constraints: [node.role == worker]
      labels:
        - traefik.http.routers.order.rule=Host(`order.relephant.eu`)
        - traefik.http.services.order-service.loadbalancer.server.port=80
    networks:
      - webgateway
    restart: always

  user:
    image: 555658144160.dkr.ecr.eu-central-1.amazonaws.com/relephant-user:${VERSION}
    build:
      context: ../user/
      dockerfile: deploy/Dockerfile
    deploy:
      placement:
        constraints: [node.role == worker]
      labels:
        - traefik.http.routers.user.rule=Host(`user.relephant.eu`)
        - traefik.http.services.user-service.loadbalancer.server.port=80
    networks:
      - webgateway
    restart: always

  inventory:
    image: 555658144160.dkr.ecr.eu-central-1.amazonaws.com/relephant-inventory:${VERSION}
    build:
      context: ../inventory/
      dockerfile: deploy/Dockerfile
    deploy:
      placement:
        constraints: [node.role == worker]
      labels:
        - traefik.http.routers.inventory.rule=Host(`inventory.relephant.eu`)
        - traefik.http.services.inventory-service.loadbalancer.server.port=80
    networks:
      - webgateway
    restart: always

  api:
    image: 555658144160.dkr.ecr.eu-central-1.amazonaws.com/relephant-api:${VERSION}
    build:
      context: ../api-gateway/
      dockerfile: deploy/Dockerfile
    environment:
      APP_ENV: ${ENVIRONMENT}
      CONTAINER_ROLE: app
    deploy:
      placement:
        constraints: [node.role == worker]
      labels:
        - traefik.http.routers.api.rule=Host(`api.relephant.eu`)
        - traefik.http.services.api-service.loadbalancer.server.port=80
    networks:
      - webgateway
    restart: always

  api-schedule:
    image: 555658144160.dkr.ecr.eu-central-1.amazonaws.com/relephant-api-schedule:${VERSION}
    build:
      context: ../api-gateway/
      dockerfile: deploy/Dockerfile
    environment:
      APP_ENV: ${ENVIRONMENT}
      CONTAINER_ROLE: scheduler
    deploy:
      placement:
        constraints: [node.role == worker]
    networks:
      - webgateway
    restart: always

networks:
  webgateway:
    driver: overlay
  web:
    external:
      name: traefik_webgateway
